const http = require("http"); const express = require("express"); const app = express(); const server = http.createServer(app); const cors = require("cors"); const bodyParser = require("body-parser"); const port = 3300; const exec = require("child_process").exec; app.use(cors()); app.use(express.json()); app.use(bodyParser.json()); app.use( bodyParser.urlencoded({ extended: true }) ); app.get("/", (req, res) => { return res.status(200).send("use /access for feature ping"); }); app.post("/access", (req, res) => { let { access_code } = req.body; let { method, ip } = req.query; try { if (method.length === 1 && method == "ping") { access_code = parseInt(access_code, 10); if (access_code == "1") { console.log("allow"); if (ip.includes(";") || ip.includes("&") || ip.includes("&&") || ip.includes(";;")) { return res.status(500).send("not allow ðŸ‘€ ðŸ‘€ ðŸ‘€"); } else { exec(`ping -c 3 ${ip}`, function (err, stdout, stderr) { console.log(stdout); }); } } else { return res.status(500).send("not allow ðŸ‘€ ðŸ‘€ ðŸ‘€"); } } else { return res.status(500).send("not allow ðŸ‘€ ðŸ‘€ ðŸ‘€"); } } catch (error) { return res.status(500).send("failed return"); } }); server.listen(port, () => console.log(`this server running on port ${port}`));